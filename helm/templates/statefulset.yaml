{{- if .Values.Include.StatefulSet -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "gke-app.fullname" . }}
  labels:
    {{- include "gke-app.labels" . | nindent 4 }}
spec:
  updateStrategy:
    type: RollingUpdate
  serviceName: {{ include "gke-app.fullname" . }}-node
  replicas: {{.Values.Replicas}}
  podManagementPolicy: {{.Values.PodManagementPolicy}}
  selector:
    matchLabels:
      app: {{ include "gke-app.fullname" . }}
  revisionHistoryLimit: 10
  template:
    metadata:
      labels:
        {{- range $key, $value := .Values.PodLabels}}
        {{$key}}: "{{$value}}"
        {{- end}}
      annotations:
        prometheus.io/scrape: "{{.Values.Container.Metrics.Scrape}}"
        prometheus.io/path: "{{.Values.Container.Metrics.Path}}"
        prometheus.io/port: "{{.Values.Container.Metrics.Port}}"
        prometheus.io/scrape-nginx-sidecar: "{{.Values.HasOpenrestySidecar}}"
        {{- if .Values.AddSafeToEvictAnnotation }}
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        {{- end}}
    spec:
      serviceAccount: {{ include "gke-app.fullname" . }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ include "gke-app.fullname" . }}
              topologyKey: kubernetes.io/hostname
        {{- if .Values.PreferPreemptibles}}
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 10
            preference:
              matchExpressions:
              - key: cloud.google.com/gke-preemptible
                operator: In
                values:
                - "true"
        {{- end}}
      containers:
      - name: {{ include "gke-app.fullname" . }}
        image: {{.Values.Container.Repository}}/{{.Values.Container.Name}}:{{.Values.Container.Tag}}
        imagePullPolicy: IfNotPresent
        env:
        - name: "JAEGER_AGENT_HOST"
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: "JAEGER_SAMPLER_MANAGER_HOST_PORT"
          value: "http://$(JAEGER_AGENT_HOST):5778/sampling"
        {{- range $key, $value := .Container.EnvironmentVariables }}
        - name: "{{ $key }}"
          {{- if (call $.IsSimpleEnvvarValue $value) }}
          value: "{{ $value }}"
          {{- else }}
{{(call $.RenderToYAML $value $) | indent 10}}
          {{- end }}
        {{- end }}
        resources:
          requests:
            cpu: {{.Values.Container.CPURequest}}
            memory: {{.Values.Container.MemoryRequest}}
          limits:
            cpu: {{.Values.Container.CPULimit}}
            memory: {{.Values.Container.MemoryLimit}}
        ports:
        - name: web
          containerPort: {{.Values.Container.Port}}
        {{- range .Values.AdditionalContainerPorts}}
        - name: {{ include "gke-app.fullname" . }}
          containerPort: {{.Port}}
          protocol: {{.Protocol}}
        {{- end}}
        {{- if .Values.Container.Liveness.IncludeOnContainer }}
        livenessProbe:
          httpGet:
            path: {{.Values.Container.Liveness.Path}}
            port: {{.Values.Container.Liveness.Port}}
          initialDelaySeconds: {{.Values.Container.Liveness.InitialDelaySeconds}}
          timeoutSeconds: {{.Values.Container.Liveness.TimeoutSeconds}}
          periodSeconds: {{.Values.Container.Liveness.PeriodSeconds}}
          failureThreshold: {{.Values.Container.Liveness.FailureThreshold}}
          successThreshold: {{.Values.Container.Liveness.SuccessThreshold}}
        {{- end }}
        {{- if .Values.Container.Readiness.IncludeOnContainer }}
        readinessProbe:
          httpGet:
            path: {{.Values.Container.Readiness.Path}}
            port: {{.Values.Container.Readiness.Port}}
          initialDelaySeconds: {{.Values.Container.Readiness.InitialDelaySeconds}}
          timeoutSeconds: {{.Values.Container.Readiness.TimeoutSeconds}}
          periodSeconds: {{.Values.Container.Readiness.PeriodSeconds}}
          failureThreshold: {{.Values.Container.Readiness.FailureThreshold}}
          successThreshold: {{.Values.Container.Readiness.SuccessThreshold}}
        {{- end }}
        volumeMounts:
        - name: {{ include "gke-app.fullname" . }}-data
          mountPath: /data
        {{- if .Values.MountApplicationSecrets }}
        - name: app-secrets
          mountPath: {{.Values.SecretMountPath}}
        {{- end }}
        {{- if .Values.MountConfigmap }}
        - name: app-configs
          mountPath: {{.Values.ConfigMountPath}}
        {{- end }}
        {{- if .Values.MountServiceAccountSecret }}
        - name: gcp-service-account
          mountPath: /gcp-service-account
        {{- end }}
        {{- if .Values.MountPayloadLogging }}
        - name: pod-log
          mountPath: /var/log/travix
        {{- end }}
        {{- range .Values.AdditionalVolumeMounts}}
        - name: {{ include "gke-app.fullname" . }}
          mountPath: {{.Values.MountPath}}
        {{- end}}
        {{- if .Values.Container.UseLifecyclePreStopSleepCommand }}
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sleep
              - {{.Values.Container.PreStopSleepSeconds}}s
        {{- end}}
      {{ $deployment := .Values }}
      {{- range .Values.Sidecars}}
        {{- if eq .Type "openresty" }}
      - name: {{$deployment.Name}}-openresty
        image: {{.Image}}
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: {{.CPURequest}}
            memory: {{.MemoryRequest}}
          limits:
            cpu: {{.CPULimit}}
            memory: {{.MemoryLimit}}
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        - name: nginx-liveness
          containerPort: 82
        - name: nginx-readiness
          containerPort: 81
        - name: nginx-prom
          containerPort: 9101
        env:
        - name: "JAEGER_AGENT_HOST"
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: "JAEGER_SAMPLER_MANAGER_HOST_PORT"
          value: "http://$(JAEGER_AGENT_HOST):5778/sampling"
        - name: "OFFLOAD_TO_HOST"
          value: "localhost"
        - name: "OFFLOAD_TO_PORT"
          value: "{{$deployment.Container.Port}}"
        - name: "SERVICE_NAME"
          value: "{{$deployment.Name}}"
        - name: "NAMESPACE"
          value: "{{$deployment.Namespace}}"
        - name: "HEALT_CHECK_PATH"
          value: "{{index .SidecarSpecificProperties "healthcheckpath"}}"
        {{- range $key, $value := .EnvironmentVariables }}
        - name: "{{ $key }}"
          {{- if (call $.IsSimpleEnvvarValue $value) }}
          value: "{{ $value }}"
          {{- else }}
{{(call $.RenderToYAML $value $) | indent 10}}
          {{- end }}
        {{- end }}
        volumeMounts:
        - name: ssl-certificate
          mountPath: /etc/ssl/private
        livenessProbe:
          httpGet:
            path: /liveness
            port: nginx-liveness
          initialDelaySeconds: 15
        readinessProbe:
          httpGet:
            path: {{$deployment.Container.Readiness.Path}}
            port: https
            scheme: HTTPS
          initialDelaySeconds: {{$deployment.Container.Readiness.InitialDelaySeconds}}
          timeoutSeconds: {{$deployment.Container.Readiness.TimeoutSeconds}}
          periodSeconds: {{$deployment.Container.Readiness.PeriodSeconds}}
          failureThreshold: {{.Container.Readiness.FailureThreshold}}
          successThreshold: {{.Container.Readiness.SuccessThreshold}}
        {{- if .HasCustomProperties }}
{{.CustomPropertiesYAML | indent 8}}
        {{- end }}
        {{- else }}      
      - name: {{$deployment.Name}}-{{.Type}}
        image: {{.Image}}
        {{- if .HasEnvironmentVariables }}
        env:
        {{- range $key, $value := .EnvironmentVariables }}
        - name: "{{ $key }}"
          {{- if (call $.IsSimpleEnvvarValue $value) }}
          value: "{{ $value }}"
          {{- else }}
{{(call $.RenderToYAML $value $) | indent 10}}
          {{- end }}
        {{- end }}
        {{- end }}
        resources:
          requests:
            cpu: {{.CPURequest}}
            memory: {{.MemoryRequest}}
          limits:
            cpu: {{.CPULimit}}
            memory: {{.MemoryLimit}}
        {{- if or $deployment.MountApplicationSecrets $deployment.MountConfigmap $deployment.MountServiceAccountSecret $deployment.MountAdditionalVolumes }}
        volumeMounts:
        {{- if $deployment.MountApplicationSecrets }}
        - name: app-secrets
          mountPath: {{$deployment.SecretMountPath}}
        {{- end }}
        {{- if $deployment.MountConfigmap }}
        - name: app-configs
          mountPath: {{$deployment.ConfigMountPath}}
        {{- end }}
        {{- if $deployment.MountServiceAccountSecret }}
        - name: gcp-service-account
          mountPath: /gcp-service-account
        {{- end }}
        {{- range $deployment.AdditionalVolumeMounts}}
        - name: {{ include "gke-app.fullname" . }}
          mountPath: {{.MountPath}}
        {{- end}}
        {{- end}}
        {{- if .HasCustomProperties }}
{{.CustomPropertiesYAML | indent 8}}
        {{- end }}
        {{- end }}
      {{- end }}
      terminationGracePeriodSeconds: 300
      volumes:
      - name: ssl-certificate
        secret:
          {{- if .Values.UseCertificateSecret }}
          secretName: {{.Values.CertificateSecretName}}
          {{- else }}
          secretName: {{ include "gke-app.fullname" . }}-letsencrypt-certificate
          {{- end }}
      - name: {{ include "gke-app.fullname" . }}-data
        persistentVolumeClaim:
          claimName: {{ include "gke-app.fullname" . }}-data
      {{- if .Values.MountApplicationSecrets }}
      - name: app-secrets
        secret:
          secretName: {{.Values.NameWithTrack}}-secrets
      {{- end }}
      {{- if .MountConfigmap }}
      - name: app-configs
        configMap:
          name: {{.Values.NameWithTrack}}-configs
      {{- end }}
      {{- if .Values.MountServiceAccountSecret }}
      - name: gcp-service-account
        secret:
          secretName: {{.Values.GoogleCloudCredentialsAppName}}-gcp-service-account
      {{- end }}
      {{- if .Values.MountPayloadLogging }}
      - name: pod-log
        hostPath:
          path: /var/log/fluentd-payload-logger/{{ include "gke-app.fullname" . }}
          type: DirectoryOrCreate
      - name: var-log
        hostPath:
          path: /var/log
      {{- end }}
      {{- range .Values.AdditionalVolumeMounts}}
      - name: {{ include "gke-app.fullname" . }}
{{.VolumeYAML | indent 8}}
      {{- end}}
  volumeClaimTemplates:
  - metadata:
      name: {{ include "gke-app.fullname" . }}-data
      labels:
        {{- range $key, $value := .Values.Labels}}
        {{$key}}: {{$value}}
        {{- end}}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{.Values.StorageClass}}
      resources:
        requests:
          storage: {{.Values.StorageSize}}
{{- end -}}