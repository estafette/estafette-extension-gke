{{- if .Values.include.ingress -}}
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ .Values.name }}
  labels:
    {{- range $key, $value := .Values.labels}}
    {{$key}}: {{$value}}
    {{- end}}
  annotations:
    {{- if .Values.usenginxingress }}
    kubernetes.io/ingress.class: "nginx-office"
    {{- if .Values.usehttps }}
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/proxy-ssl-verify: "on"
    {{- end }}
    nginx.ingress.kubernetes.io/client-body-buffer-size: "{{ .Values.nginxingressclientbodybuffersize }}"
    nginx.ingress.kubernetes.io/proxy-body-size: "{{ .Values.nginxingressproxybodysize }}"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "{{ .Values.nginxingressproxybuffersnumber }}"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "{{ .Values.nginxingressproxybuffersize }}"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "{{ .Values.nginxingressproxyconnecttimeout }}"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "{{ .Values.nginxingressproxysendtimeout }}"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "{{ .Values.nginxingressproxyreadtimeout }}"
    {{- if .Values.overridedefaultwhitelist }}
    nginx.ingress.kubernetes.io/whitelist-source-range: "{{ .Values.nginxingresswhitelist }}"
    {{- end }}
    {{- if .Values.setsnginxingressloadbalancealgorithm }}
    nginx.ingress.kubernetes.io/load-balance: "{{ .Values.nginxingressloadbalancealgorithm }}"
    {{- end }}
    {{- end }}
    {{- if .Values.usegceingress }}
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.allow-http: "false"
    {{- end }}
    {{- if .Values.usednsannotationsoningress }}
    estafette.io/cloudflare-dns: "true"
    estafette.io/cloudflare-proxy: "{{ .Values.usecloudflareproxy }}"
    estafette.io/cloudflare-hostnames: "{{ .Values.hostsjoined }}"
    {{- end }}
spec:
  tls:
  - hosts:
    {{- range .Values.hosts }}
    - {{ . }}
    {{- end }}
    {{- if .Values.usecertificatesecret }}
    secretName: {{ .Values.certificatesecretname }}
    {{- else }}
    secretName: {{ .Values.name }}-letsencrypt-certificate
    {{- end }}
  rules:
  {{- range .Values.hosts }}
  - host: {{ . }}
    http:
      paths:
      - path: {{ $.IngressPath }}
        backend:
          serviceName: {{ $.Name }}
          {{- if $.HasOpenrestySidecar }}
          servicePort: https
          {{- else }}
          servicePort: web
          {{- end }}
  {{- end }}
{{- end -}}