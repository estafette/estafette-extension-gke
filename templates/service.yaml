{{- $root := . -}}
{{- range .Services }}
apiVersion: v1
kind: Service
metadata:
  name: {{.Name}}
  namespace: {{ $root.Namespace}}
  labels:
    {{- range $key, $value := $root.Labels}}
    {{ $key | quote }}: {{ $value | quote }}
    {{- end}}
  annotations:
    {{- if $root.UsePrometheusProbe}}
    prometheus.io/probe: "true"
    prometheus.io/probe-path: "{{ $root.Container.Readiness.Path}}"
    {{- end}}
    service.alpha.kubernetes.io/app-protocols: '{"https":"HTTPS"}'
    {{- if .UseDNSAnnotationsOnService}}
    estafette.io/cloudflare-dns: "true"
    estafette.io/cloudflare-proxy: "{{ $root.UseCloudflareProxy}}"
    estafette.io/cloudflare-hostnames: "{{ $root.HostsJoined}}"
    {{- end}}
    {{- if .UseBackendConfigAnnotationOnService}}
    beta.cloud.google.com/backend-config: '{"default": "{{.Name}}"}'
    {{- end}}
    {{- if .UseNegAnnotationOnService}}
    cloud.google.com/neg: '{"ingress": true}'
    {{- end}}
spec:
  type: {{.ServiceType}}
  {{- if $root.LimitTrustedIPRanges}}
  loadBalancerSourceRanges:
  {{- range $root.TrustedIPRanges}}
  - {{.}}
  {{- end}}
  {{- end}}
  ports:
  {{- if $root.HasOpenrestySidecar }}
  {{- if not $root.UseESP }}
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  {{- end }}
  - name: https
    port: 443
    targetPort: https
    protocol: TCP
  {{- else }}
  - name: web
    port: {{ $root.Container.Port}}
    targetPort: web
    protocol: TCP
  {{- end}}
  {{- range $root.AdditionalServicePorts}}
  - name: {{.Name}}
    port: {{.Port}}
    targetPort: {{.Name}}
    protocol: {{.Protocol}}
  {{- end}}
  selector:
    "app": {{ $root.AppLabelSelector | quote }}
    {{- if $root.IncludeAtomicIDSelector }}
    "estafette.io/atomic-id": {{ $root.AtomicID | quote }}
    {{- end}}
{{- end}}