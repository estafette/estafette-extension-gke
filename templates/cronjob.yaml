{{- $deployment := . }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{.Name}}
  namespace: {{.Namespace}}
  labels:
    {{- range $key, $value := .Labels}}
    {{ $key | quote }}: {{ $value | quote }}
    {{- end}}
spec:
  schedule: '{{.Schedule}}'
  concurrencyPolicy: {{.ConcurrencyPolicy}}
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 3
  suspend: false  
  jobTemplate:
    spec:
      completions: {{.Completions}}
      parallelism: {{.Parallelism}}
      backoffLimit: {{.BackoffLimit}}
      template:
        metadata:
          labels:
            {{- range $key, $value := .PodLabels}}
            {{ $key | quote }}: {{ $value | quote }}
            {{- end}}
          annotations:
            prometheus.io/scrape: "{{.Container.Metrics.Scrape}}"
            prometheus.io/path: "{{.Container.Metrics.Path}}"
            prometheus.io/port: "{{.Container.Metrics.Port}}"
            prometheus.io/scrape-nginx-sidecar: "{{.HasOpenrestySidecar}}"
        spec:
          {{- if .HasTolerations }}
          tolerations:
{{(call $.ToYAML .Tolerations) | indent 10}}
          {{- end}}
          {{- if .HasImagePullSecret }}
          imagePullSecrets:
          - name: {{.Name}}-image-pull-secret
          {{- end}}
          restartPolicy: {{.RestartPolicy}}
          serviceAccount: {{.Name}}
          {{- if .PodSecurityContext }}
          securityContext:
{{(call $.ToYAML .PodSecurityContext) | indent 12}}
          {{- end }}
          affinity:
          {{- if .Affinity }}
{{(call $.ToYAML .Affinity) | indent 12}}
          {{- else }}
          {{- if or .PreferPreemptibles .UseWindowsNodes}}
            nodeAffinity:
              {{- if .UseWindowsNodes}}
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                    - windows
              {{- end}}
              {{- if .PreferPreemptibles}}
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 10
                preference:
                  matchExpressions:
                  - key: cloud.google.com/gke-preemptible
                    operator: In
                    values:
                    - "true"
              {{- end}}
          {{- end}}
          {{- end }}
          {{- if or .HasInitContainers .UseWorkloadIdentity}}
          initContainers:
          {{- if .UseWorkloadIdentity }}
          - image:  gcr.io/google.com/cloudsdktool/cloud-sdk:326.0.0-alpine
            name: {{$deployment.Name}}-workload-identity
            command:
            - '/bin/bash'
            - '-c'
            - |
              curl -s -H 'Metadata-Flavor: Google' 'http://169.254.169.254/computeMetadata/v1/instance/service-accounts/default/token' --retry 30 --retry-connrefused --retry-max-time 30 > /dev/null || exit 1
          {{- end}}
          {{- if .HasInitContainers }}
{{(call $.ToYAML .InitContainers) | indent 6}}
          {{- end}}
          {{- end}}
          containers:
          - name: {{.Name}}
            image: {{.Container.Repository}}/{{.Container.Name}}:{{.Container.Tag}}
            imagePullPolicy: {{.Container.ImagePullPolicy}}
            {{- if .Container.ContainerSecurityContext }}
            securityContext:
{{(call $.ToYAML .Container.ContainerSecurityContext) | indent 14}}
            {{- end }}
            {{- if .Container.ContainerLifeCycle }}
            lifecycle:
{{(call $.ToYAML .Container.ContainerLifeCycle) | indent 14}}
            {{- end }}
            env:
            - name: "JAEGER_AGENT_HOST"
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: "JAEGER_SAMPLER_MANAGER_HOST_PORT"
              value: "http://$(JAEGER_AGENT_HOST):5778/sampling"
            {{- range $key, $value := .Container.EnvironmentVariables }}
            - name: {{ $key | quote }}
              {{- if (call $.IsSimpleEnvvarValue $value) }}
              value: {{ $value | quote }}
              {{- else }}
{{(call $.RenderToYAML $value $) | indent 14}}
              {{- end }}
            {{- end }}
            {{- range $key, $value := .Container.SecretEnvironmentVariables }}
            - name: {{ $key | quote }}
              valueFrom:
                secretKeyRef:
                  name: {{$deployment.Name}}-secrets
                  key: {{ $key }}
            {{- end }}
            resources:
              requests:
                cpu: {{.Container.CPURequest}}
                memory: {{.Container.MemoryRequest}}
              limits:
                {{- if .Container.CPULimit}}
                cpu: {{.Container.CPULimit}}
                {{- end }}
                memory: {{.Container.MemoryLimit}}
            {{- if or .MountApplicationSecrets .MountConfigmap .MountServiceAccountSecret .MountAdditionalVolumes }}
            volumeMounts:
            {{- if .MountApplicationSecrets }}
            - name: app-secrets
              mountPath: {{.SecretMountPath}}
            {{- end }}
            {{- if .MountConfigmap }}
            - name: app-configs
              mountPath: {{.ConfigMountPath}}
            {{- end }}
            {{- if .MountServiceAccountSecret }}
            - name: gcp-service-account
              mountPath: /gcp-service-account
            {{- end }}
            {{- range .AdditionalVolumeMounts}}
            - name: {{.Name}}
              mountPath: {{.MountPath}}
            {{- end}}
          {{- end }}
          {{- if .HasCustomSidecars }}
{{(call $.ToYAML .CustomSidecars) | indent 10}}
          {{- end}}
          terminationGracePeriodSeconds: 300
          {{- if or .MountApplicationSecrets .MountConfigmap .MountServiceAccountSecret .MountAdditionalVolumes }}
          volumes:
          {{- if .MountApplicationSecrets }}
          - name: app-secrets
            secret:
              secretName: {{.Name}}-secrets
          {{- end }}
          {{- if .MountConfigmap }}
          - name: app-configs
            configMap:
              name: {{.Name}}-configs
          {{- end }}
          {{- if .MountServiceAccountSecret }}
          - name: gcp-service-account
            secret:
              secretName: {{.GoogleCloudCredentialsAppName}}-gcp-service-account
          {{- end }}
          {{- range .AdditionalVolumeMounts}}
          - name: {{.Name}}
{{.VolumeYAML | indent 12}}
          {{- end}}
          {{- end}}
