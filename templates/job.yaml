apiVersion: batch/v1
kind: Job
metadata:
  name: {{.Name}}
  namespace: {{.Namespace}}
  labels:
    {{- range $key, $value := .Labels}}
    {{$key}}: {{$value}}
    {{- end}}
spec:
  completions: 1
  parallelism: 1
  template:
    metadata:
      labels:
        {{- range $key, $value := .Labels}}
        {{$key}}: {{$value}}
        {{- end}}
        version: {{.BuildVersion}}
        {{- if .IncludeReleaseIDLabel}}
        release-id: "{{.ReleaseIDLabel}}"
        {{- end}}
        {{- if .IncludeTriggeredByLabel}}
        triggered-by: "{{.TriggeredByLabel}}"
        {{- end}}
      annotations:
        prometheus.io/scrape: "{{.Container.Metrics.Scrape}}"
        prometheus.io/path: "{{.Container.Metrics.Path}}"
        prometheus.io/port: "{{.Container.Metrics.Port}}"
        prometheus.io/scrape-nginx-sidecar: "true"
    spec:
      restartPolicy: OnFailure
      serviceAccount: {{.Name}}
      containers:
      - name: {{.Name}}
        image: {{.Container.Repository}}/{{.Container.Name}}:{{.Container.Tag}}
        imagePullPolicy: IfNotPresent
        env:
        - name: "JAEGER_AGENT_HOST"
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        {{- range $key, $value := .Container.EnvironmentVariables }}
        - name: "{{ $key }}"
          {{- if (call $.IsSimpleEnvvarValue $value) }}
          value: "{{ $value }}"
          {{- else }}
{{$value | indent 10}}
          {{- end }}
        {{- end }}
        resources:
          requests:
            cpu: {{.Container.CPURequest}}
            memory: {{.Container.MemoryRequest}}
          limits:
            cpu: {{.Container.CPULimit}}
            memory: {{.Container.MemoryLimit}}
        {{- if or .MountApplicationSecrets .MountConfigmap .MountServiceAccountSecret .MountAdditionalVolumes }}
        volumeMounts:
        {{- if .MountApplicationSecrets }}
        - name: app-secrets
          mountPath: {{.SecretMountPath}}
        {{- end }}
        {{- if .MountConfigmap }}
        - name: app-configs
          mountPath: {{.ConfigMountPath}}
        {{- end }}
        {{- if .MountServiceAccountSecret }}
        - name: gcp-service-account
          mountPath: /gcp-service-account
        {{- end }}
        {{- range .AdditionalVolumeMounts}}
        - name: {{.Name}}
          mountPath: {{.MountPath}}
        {{- end}}
        {{- end }}
      terminationGracePeriodSeconds: 300
      {{- if or .MountApplicationSecrets .MountConfigmap .MountServiceAccountSecret .MountAdditionalVolumes }}
      volumes:
      {{- if .MountApplicationSecrets }}
      - name: app-secrets
        secret:
          secretName: {{.Name}}-secrets
      {{- end }}
      {{- if .MountConfigmap }}
      - name: app-configs
        configMap:
          name: {{.Name}}-configs
      {{- end }}
      {{- if .MountServiceAccountSecret }}
      - name: gcp-service-account
        secret:
          secretName: {{.GoogleCloudCredentialsAppName}}-gcp-service-account
      {{- end }}
      {{- range .AdditionalVolumeMounts}}
      - name: {{.Name}}
{{.VolumeYAML | indent 8}}
      {{- end}}
      {{- end}}