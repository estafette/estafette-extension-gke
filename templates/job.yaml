{{- $deployment := . }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{.Name}}
  namespace: {{.Namespace}}
  labels:
    {{- range $key, $value := .Labels}}
    {{ $key | quote }}: {{ $value | quote }}
    {{- end}}
spec:
  completions: {{.Completions}}
  parallelism: {{.Parallelism}}
  backoffLimit: {{.BackoffLimit}}
  template:
    metadata:
      labels:
        {{- range $key, $value := .PodLabels}}
        {{ $key | quote }}: {{ $value | quote }}
        {{- end}}
      annotations:
        prometheus.io/scrape: "{{.Container.Metrics.Scrape}}"
        prometheus.io/path: "{{.Container.Metrics.Path}}"
        prometheus.io/port: "{{.Container.Metrics.Port}}"
        prometheus.io/scrape-nginx-sidecar: "{{.HasOpenrestySidecar}}"
    spec:
      {{- if .HasTolerations }}
      tolerations:
{{(call $.ToYAML .Tolerations) | indent 6}}
      {{- end}}
      {{- if .HasImagePullSecret }}
      imagePullSecrets:
      - name: {{.Name}}-image-pull-secret
      {{- end}}
      restartPolicy: {{.RestartPolicy}}
      serviceAccount: {{.Name}}
      {{- if or .PreferPreemptibles .UseWindowsNodes}}
      affinity:
        nodeAffinity:
          {{- if .UseWindowsNodes}}
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - windows
          {{- end}}
          {{- if .PreferPreemptibles}}
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 10
            preference:
              matchExpressions:
              - key: cloud.google.com/gke-preemptible
                operator: In
                values:
                - "true"
          {{- end}}
      {{- end}}
      containers:
      - name: {{.Name}}
        image: {{.Container.Repository}}/{{.Container.Name}}:{{.Container.Tag}}
        imagePullPolicy: {{.Container.ImagePullPolicy}}
        env:
        - name: "JAEGER_AGENT_HOST"
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: "JAEGER_SAMPLER_MANAGER_HOST_PORT"
          value: "http://$(JAEGER_AGENT_HOST):5778/sampling"
        {{- range $key, $value := .Container.EnvironmentVariables }}
        - name: {{ $key | quote }}
          {{- if (call $.IsSimpleEnvvarValue $value) }}
          value: {{ $value | quote }}
          {{- else }}
{{(call $.RenderToYAML $value $) | indent 10}}
          {{- end }}
        {{- end }}
        {{- range $key, $value := .Container.SecretEnvironmentVariables }}
        - name: {{ $key | quote }}
          valueFrom:
            secretKeyRef:
              name: {{$deployment.Name}}-secrets
              key: {{ $key }}
        {{- end }}
        resources:
          requests:
            cpu: {{.Container.CPURequest}}
            memory: {{.Container.MemoryRequest}}
          limits:
            {{- if .Container.CPULimit}}
            cpu: {{.Container.CPULimit}}
            {{- end }}
            memory: {{.Container.MemoryLimit}}
        {{- if or .MountApplicationSecrets .MountConfigmap .MountServiceAccountSecret .MountAdditionalVolumes }}
        volumeMounts:
        {{- if .MountApplicationSecrets }}
        - name: app-secrets
          mountPath: {{.SecretMountPath}}
        {{- end }}
        {{- if .MountConfigmap }}
        - name: app-configs
          mountPath: {{.ConfigMountPath}}
        {{- end }}
        {{- if .MountServiceAccountSecret }}
        - name: gcp-service-account
          mountPath: /gcp-service-account
        {{- end }}
        {{- range .AdditionalVolumeMounts}}
        - name: {{.Name}}
          mountPath: {{.MountPath}}
        {{- end}}
      {{- end }}
      {{- if .HasCustomSidecars }}
{{(call $.ToYAML .CustomSidecars) | indent 6}}
      {{- end}}
      terminationGracePeriodSeconds: 300
      {{- if or .MountApplicationSecrets .MountConfigmap .MountServiceAccountSecret .MountAdditionalVolumes }}
      volumes:
      {{- if .MountApplicationSecrets }}
      - name: app-secrets
        secret:
          secretName: {{.Name}}-secrets
      {{- end }}
      {{- if .MountConfigmap }}
      - name: app-configs
        configMap:
          name: {{.Name}}-configs
      {{- end }}
      {{- if .MountServiceAccountSecret }}
      - name: gcp-service-account
        secret:
          secretName: {{.GoogleCloudCredentialsAppName}}-gcp-service-account
      {{- end }}
      {{- range .AdditionalVolumeMounts}}
      - name: {{.Name}}
{{.VolumeYAML | indent 8}}
      {{- end}}
      {{- end}}