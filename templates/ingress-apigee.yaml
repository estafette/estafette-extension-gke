apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{.Name}}
  namespace: {{.Namespace}}
  labels:
    {{- range $key, $value := .Labels}}
    {{$key}}: {{$value}}
    {{- end}}
  annotations:
    kubernetes.io/ingress.class: "nginx-open"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/client-body-buffer-size: "{{.NginxIngressClientBodyBufferSize}}"
    nginx.ingress.kubernetes.io/proxy-body-size: "{{.NginxIngressProxyBodySize}}"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "{{.NginxIngressProxyBuffersNumber}}"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "{{.NginxIngressProxyBufferSize}}"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "{{.NginxIngressProxyConnectTimeout}}"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "{{.NginxIngressProxySendTimeout}}"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "{{.NginxIngressProxyReadTimeout}}"
    {{- if .OverrideDefaultWhitelist}}
    nginx.ingress.kubernetes.io/whitelist-source-range: "{{.NginxIngressWhitelist}}"
    {{- end}}
    {{- if .SetsNginxIngressLoadBalanceAlgorithm }}
    nginx.ingress.kubernetes.io/load-balance: "{{.NginxIngressLoadBalanceAlgorithm}}"
    {{- end }} 
    estafette.io/cloudflare-dns: "true"
    estafette.io/cloudflare-proxy: "false"
    estafette.io/cloudflare-hostnames: "{{.HostsJoined}}"
    nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"
    nginx.ingress.kubernetes.io/auth-tls-secret: "{{.NginxAuthTLSSecret}}"
    nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
    nginx.ingress.kubernetes.io/auth-tls-verify-depth: "{{.NginxAuthTLSVerifyDepth}}"
spec:
  tls:
  - hosts:
    {{- range .Hosts}}
    - {{.}}
    {{- end}}
    {{- if .UseCertificateSecret }}
    secretName: {{.CertificateSecretName}}
    {{- else }}
    secretName: {{.Name}}-letsencrypt-certificate
    {{- end }}
  rules:
  {{- range .Hosts}}
  - host: {{.}}
    http:
      paths:
      - path: {{$.IngressPath}}
        backend:
          serviceName: {{$.Name}}
          {{- if $.HasOpenrestySidecar }}
          servicePort: https
          {{- else }}
          servicePort: web
          {{- end }}
  {{- end}}
