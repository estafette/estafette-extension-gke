apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{.Name}}-internal
  namespace: {{.Namespace}}
  labels:
    {{- range $key, $value := .Labels}}
    {{ $key | quote }}: {{ $value | quote }}
    {{- end}}
  annotations:
    {{- if .UseHTTPS }}
    nginx.ingress.kubernetes.io/backend-protocol: "{{.NginxIngressBackendProtocol}}"
    nginx.ingress.kubernetes.io/proxy-ssl-verify: "on"
    {{- end }}
    {{- if .AllowHTTP }}
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    {{- end}}
    nginx.ingress.kubernetes.io/client-body-buffer-size: "{{.NginxIngressClientBodyBufferSize}}"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "{{.NginxIngressProxyBuffersNumber}}"
    nginx.ingress.kubernetes.io/proxy-body-size: "{{.NginxIngressProxyBodySize}}"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "{{.NginxIngressProxyBufferSize}}"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "{{.NginxIngressProxyConnectTimeout}}"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "{{.NginxIngressProxySendTimeout}}"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "{{.NginxIngressProxyReadTimeout}}"
    {{- if .SetsNginxIngressLoadBalanceAlgorithm }}
    nginx.ingress.kubernetes.io/load-balance: "{{.NginxIngressLoadBalanceAlgorithm}}"
    {{- end }}
    {{- if .UseTopologyAwareHints}}
    nginx.ingress.kubernetes.io/service-upstream: "true"
    {{- end}}
    {{- if .UseCloudflareEstafetteExtension}}
    # estafette.io/google-cloud-dns: "true"
    # estafette.io/google-cloud-dns-hostnames: "{{.InternalHostsJoined}}"
    estafette.io/cloudflare-dns: "true"
    estafette.io/cloudflare-proxy: "false"
    estafette.io/cloudflare-hostnames: "{{.InternalHostsJoined}}"
    {{- end }}
    {{- if .UseExternalDNS }}
    external-dns.alpha.kubernetes.io/enabled: "true"
    external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
    {{- end }}
spec:
  ingressClassName: nginx-internal
  tls:
  - hosts:
    {{- range .InternalHosts}}
    - {{.}}
    {{- end}}
    {{- if .UseCertificateSecret }}
    secretName: {{.CertificateSecretName}}
    {{- else }}
    secretName: {{.Name}}-letsencrypt-certificate
    {{- end }}
  rules:
  {{- range .InternalHosts}}
  - host: {{.}}
    http:
      paths:
      - path: {{$.InternalIngressPath}}
        pathType: {{$.PathType}}
        backend:
          service:
            {{- if .UseESP }}
            name: {{$.Name}}-cluster-ip
            port:
              name: https
            {{- end }}
            name: {{$.Name}}
            port:
              {{- if $.HasOpenrestySidecar }}
              name: https
              {{- else }}
              name: web
              {{- end }}
  {{- end}}
