{{- if .Values.include.statefulset -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.name }}
  labels:
    {{- range $key, $value := .Values.labels}}
    {{$key}}: {{$value}}
    {{- end}}
spec:
  updateStrategy:
    type: RollingUpdate
  serviceName: {{ .Values.name }}-node
  replicas: {{ .Values.replicas }}
  podManagementPolicy: {{ .Values.podmanagementpolicy }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  revisionHistoryLimit: 10
  template:
    metadata:
      labels:
        {{- range $key, $value := .Values.podlabels }}
        {{ $key }}: "{{ $value }}"
        {{- end }}
      annotations:
        prometheus.io/scrape: "{{ .Values.container.metrics.scrape }}"
        prometheus.io/path: "{{ .Values.container.metrics.path }}"
        prometheus.io/port: "{{ .Values.container.metrics.port }}"
        prometheus.io/scrape-nginx-sidecar: "{{ .Values.hasopenrestysidecar }}"
        {{- if .Values.addsafetoevictannotation }}
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        {{- end }}
    spec:
      serviceAccount: {{ .Values.name }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ .Values.name }}
              topologyKey: kubernetes.io/hostname
        {{- if .Values.preferpreemptibles }}
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 10
            preference:
              matchExpressions:
              - key: cloud.google.com/gke-preemptible
                operator: In
                values:
                - "true"
        {{- end }}
      containers:
      - name: {{ .Values.name }}
        image: {{ .Values.container.repository }}/{{ .Values.container.name }}:{{ .Values.container.tag }}
        imagePullPolicy: IfNotPresent
        env:
        - name: "JAEGER_AGENT_HOST"
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: "JAEGER_SAMPLER_MANAGER_HOST_PORT"
          value: "http://$(JAEGER_AGENT_HOST):5778/sampling"
        {{- range $key, $value := .Values.container.environmentvariables }}
        - name: "{{ $key }}"
          {{- template "gke-app.envvarValue" $value | nindent 10 }}
        {{- end }}
        resources:
          requests:
            cpu: {{ .Values.container.cpurequest }}
            memory: {{ .Values.container.memoryrequest }}
          limits:
            cpu: {{ .Values.container.cpulimit }}
            memory: {{ .Values.container.memorylimit }}
        ports:
        - name: web
          containerPort: {{ .Values.container.port }}
        {{- range .Values.additionalcontainerports }}
        - name: {{ .Values.name }}
          containerPort: {{ .port }}
          protocol: {{ .protocol }}
        {{- end }}
        {{- if .Values.container.liveness.includeoncontainer }}
        livenessProbe:
          httpGet:
            path: {{ .Values.container.liveness.path }}
            port: {{ .Values.container.liveness.port }}
          initialDelaySeconds: {{ .Values.container.liveness.initialdelayseconds }}
          timeoutSeconds: {{ .Values.container.liveness.timeoutseconds }}
          periodSeconds: {{ .Values.container.liveness.periodseconds }}
          failureThreshold: {{ .Values.container.liveness.failurethreshold }}
          successThreshold: {{ .Values.container.liveness.successthreshold }}
        {{- end }}
        {{- if .Values.container.readiness.includeoncontainer }}
        readinessProbe:
          httpGet:
            path: {{ .Values.container.readiness.path }}
            port: {{ .Values.container.readiness.port }}
          initialDelaySeconds: {{ .Values.container.readiness.initialdelayseconds }}
          timeoutSeconds: {{ .Values.container.readiness.timeoutseconds }}
          periodSeconds: {{ .Values.container.readiness.periodseconds }}
          failureThreshold: {{ .Values.container.readiness.failurethreshold }}
          successThreshold: {{ .Values.container.readiness.successthreshold }}
        {{- end }}
        volumeMounts:
        - name: {{ .Values.name }}-data
          mountPath: /data
        {{- if .Values.mountapplicationsecrets }}
        - name: app-secrets
          mountPath: {{ .Values.secretmountpath }}
        {{- end }}
        {{- if .Values.mountconfigmap }}
        - name: app-configs
          mountPath: {{ .Values.configmountpath }}
        {{- end }}
        {{- if .Values.mountserviceaccountsecret }}
        - name: gcp-service-account
          mountPath: /gcp-service-account
        {{- end }}
        {{- if .Values.mountpayloadlogging }}
        - name: pod-log
          mountPath: /var/log/travix
        {{- end }}
        {{- range .Values.additionalvolumemounts }}
        - name: {{ .Values.name }}
          mountPath: {{ .Values.mountpath }}
        {{- end }}
        {{- if .Values.container.uselifecycleprestopsleepcommand }}
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sleep
              - {{ .Values.container.prestopsleepseconds }}s
        {{- end }}
      {{ $deployment := .Values }}
      {{- range .Values.sidecars }}
        {{- if eq .Type "openresty" }}
      - name: {{ $deployment.name }}-openresty
        image: {{ .Image }}
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: {{ .CPURequest }}
            memory: {{ .MemoryRequest }}
          limits:
            cpu: {{ .CPULimit }}
            memory: {{ .MemoryLimit }}
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        - name: nginx-liveness
          containerPort: 82
        - name: nginx-readiness
          containerPort: 81
        - name: nginx-prom
          containerPort: 9101
        env:
        - name: "JAEGER_AGENT_HOST"
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: "JAEGER_SAMPLER_MANAGER_HOST_PORT"
          value: "http://$(JAEGER_AGENT_HOST):5778/sampling"
        - name: "OFFLOAD_TO_HOST"
          value: "localhost"
        - name: "OFFLOAD_TO_PORT"
          value: "{{ $deployment.container.port }}"
        - name: "SERVICE_NAME"
          value: "{{ $deployment.name }}"
        - name: "NAMESPACE"
          value: "{{ $deployment.namespace }}"
        - name: "HEALT_CHECK_PATH"
          value: "{{ index .sidecarspecificproperties "healthcheckpath" }}"
        {{- range $key, $value := .environmentvariables }}
        - name: "{{ $key }}"
          {{- template "gke-app.envvarValue" $value | nindent 10 }}
        {{- end }}
        volumeMounts:
        - name: ssl-certificate
          mountPath: /etc/ssl/private
        livenessProbe:
          httpGet:
            path: /liveness
            port: nginx-liveness
          initialDelaySeconds: 15
        readinessProbe:
          httpGet:
            path: {{ $deployment.container.readiness.path }}
            port: https
            scheme: HTTPS
          initialDelaySeconds: {{ $deployment.container.readiness.initialdelayseconds }}
          timeoutSeconds: {{ $deployment.container.readiness.timeoutseconds }}
          periodSeconds: {{ $deployment.container.readiness.periodseconds }}
          failureThreshold: {{ $deployment.container.readiness.failurethreshold }}
          successThreshold: {{ $deployment.container.readiness.successthreshold }}
        {{- if .hascustomproperties }}
{{ .custompropertiesyaml | indent 8 }}
        {{- end }}
        {{- else }}
      - name: {{ $deployment.name }}-{{ .Type }}
        image: {{ .image }}
        {{- if .hasenvironmentvariables }}
        env:
        {{- range $key, $value := .environmentvariables }}
        - name: "{{ $key }}"
          {{- template "gke-app.envvarValue" $value | nindent 10 }}
        {{- end }}
        {{- end }}
        resources:
          requests:
            cpu: {{ .cpurequest }}
            memory: {{ .memoryrequest }}
          limits:
            cpu: {{ .cpulimit }}
            memory: {{ .memorylimit }}
        {{- if or $deployment.mountapplicationsecrets $deployment.mountconfigmap $deployment.mountserviceaccountsecret $deployment.mountadditionalvolumes }}
        volumeMounts:
        {{- if $deployment.mountapplicationsecrets }}
        - name: app-secrets
          mountPath: {{ $deployment.secretmountpath }}
        {{- end }}
        {{- if $deployment.mountconfigmap }}
        - name: app-configs
          mountPath: {{ $deployment.configmountpath }}
        {{- end }}
        {{- if $deployment.mountserviceaccountsecret }}
        - name: gcp-service-account
          mountPath: /gcp-service-account
        {{- end }}
        {{- range $deployment.additionalvolumemounts }}
        - name: {{ .Values.name }}
          mountPath: {{ .MountPath }}
        {{- end }}
        {{- end }}
        {{- if .hascustomproperties }}
{{ .CustomPropertiesYAML | indent 8 }}
        {{- end }}
        {{- end }}
      {{- end }}
      terminationGracePeriodSeconds: 300
      volumes:
      - name: ssl-certificate
        secret:
          {{- if .Values.usecertificatesecret }}
          secretName: {{ .Values.certificatesecretname }}
          {{- else }}
          secretName: {{ .Values.name }}-letsencrypt-certificate
          {{- end }}
      - name: {{ .Values.name }}-data
        persistentVolumeClaim:
          claimName: {{ .Values.name }}-data
      {{- if .Values.mountapplicationsecrets }}
      - name: app-secrets
        secret:
          secretName: {{ .Values.namewithtrack }}-secrets
      {{- end }}
      {{- if .Values.mountconfigmap }}
      - name: app-configs
        configMap:
          name: {{ .Values.namewithtrack }}-configs
      {{- end }}
      {{- if .Values.mountserviceaccountsecret }}
      - name: gcp-service-account
        secret:
          secretName: {{ .Values.googlecloudcredentialsappname }}-gcp-service-account
      {{- end }}
      {{- if .Values.mountpayloadlogging }}
      - name: pod-log
        hostPath:
          path: /var/log/fluentd-payload-logger/{{ .Values.name }}
          type: DirectoryOrCreate
      - name: var-log
        hostPath:
          path: /var/log
      {{- end }}
      {{- range .Values.additionalvolumemounts }}
      - name: {{ .Values.name }}
{{ .VolumeYAML | indent 8 }}
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: {{ .Values.name }}-data
      labels:
        {{- range $key, $value := .Values.labels }}
        {{ $key }}: {{ $value }}
        {{- end }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.storageclass }}
      resources:
        requests:
          storage: {{ .Values.storagesize }}
{{- end -}}