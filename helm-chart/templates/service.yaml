{{- if .Values.include.service -}}
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.name }}
  labels:
    {{- range $key, $value := .Values.labels}}
    {{$key}}: {{$value}}
    {{- end}}
  annotations:
    {{- if .Values.useprometheusprobe }}
    prometheus.io/probe: "true"
    prometheus.io/probe-path: "{{ .Values.container.readiness.path }}"
    {{- end }}
    service.alpha.kubernetes.io/app-protocols: '{"https":"HTTPS"}'
    {{- if .Values.usednsannotationsonservice }}
    estafette.io/cloudflare-dns: "true"
    estafette.io/cloudflare-proxy: "{{ .Values.usecloudflareproxy }}"
    estafette.io/cloudflare-hostnames: "{{ .Values.hostsjoined }}"
    {{- end }}
    {{- if .Values.usebackendconfigannotationonservice }}
    beta.cloud.google.com/backend-config: '{"default": "{{ .Values.name }}"}'
    {{- end }}
    {{- if .Values.usenegannotationonservice }}
    cloud.google.com/neg: '{"ingress": true}'
    {{- end }}
spec:
  type: {{ .Values.servicetype }}
  {{- if .Values.limittrustedipranges }}
  loadBalancerSourceRanges:
  {{- range .Values.trustedipranges }}
  - {{ . }}
  {{- end }}
  {{- end }}
  ports:
  {{- if .Values.hasopenrestysidecar }}
  {{- if not .Values.useesp }}
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  {{- end }}
  - name: https
    port: 443
    targetPort: https
    protocol: TCP
  {{- else }}
  - name: web
    port: {{ .Values.container.port }}
    targetPort: web
    protocol: TCP
  {{- end }}
  {{- range .Values.additionalserviceports }}
  - name: {{ .Values.name }}
    port: {{ .Port }}
    targetPort: {{ .Values.name }}
    protocol: {{ .Protocol }}
  {{- end }}
  selector:
    app: {{ .Values.applabelselector }}
{{- end -}}