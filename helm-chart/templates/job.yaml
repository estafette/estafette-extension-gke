{{- if .Values.include.job -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.name }}
  labels:
    {{- range $key, $value := .Values.labels}}
    {{$key}}: {{$value}}
    {{- end}}
spec:
  completions: {{ .Values.completions }}
  parallelism: {{ .Values.parallelism }}
  backoffLimit: {{ .Values.backofflimit }}
  template:
    metadata:
      labels:
        {{- range $key, $value := .PodLabels }}
        {{ $key }}: "{{ $value }}"
        {{- end }}
      annotations:
        prometheus.io/scrape: "{{ .Values.container.metrics.scrape }}"
        prometheus.io/path: "{{ .Values.container.metrics.path }}"
        prometheus.io/port: "{{ .Values.container.metrics.port }}"
        prometheus.io/scrape-nginx-sidecar: "{{ .Values.hasopenrestysidecar }}"
    spec:
      restartPolicy: {{ .Values.restartpolicy }}
      serviceAccount: {{ .Values.name }}
      containers:
      - name: {{ .Values.name }}
        image: {{ .Values.container.repository }}/{{ .Values.container.name }}:{{ .Values.container.tag }}
        imagePullPolicy: IfNotPresent
        env:
        - name: "JAEGER_AGENT_HOST"
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: "JAEGER_SAMPLER_MANAGER_HOST_PORT"
          value: "http://$(JAEGER_AGENT_HOST):5778/sampling"
        {{- range $key, $value := .Values.container.environmentvariables }}
        - name: "{{ $key }}"
          {{- template "gke-app.envvarValue" $value | nindent 10 }}
        {{- end }}
        resources:
          requests:
            cpu: {{ .Values.container.cpurequest }}
            memory: {{ .Values.container.memoryrequest }}
          limits:
            cpu: {{ .Values.container.cpulimit }}
            memory: {{ .Values.container.memorylimit }}
        {{- if or .Values.mountapplicationsecrets .Values.mountconfigmap .Values.mountserviceaccountsecret .Values.mountadditionalvolumes }}
        volumeMounts:
        {{- if .Values.mountapplicationsecrets }}
        - name: app-secrets
          mountPath: {{ .Values.secretmountpath }}
        {{- end }}
        {{- if .Values.mountconfigmap }}
        - name: app-configs
          mountPath: {{ .Values.configmountpath }}
        {{- end }}
        {{- if .Values.mountserviceaccountsecret }}
        - name: gcp-service-account
          mountPath: /gcp-service-account
        {{- end }}
        {{- range .Values.additionalvolumemounts }}
        - name: {{ .Values.name }}
          mountPath: {{ .MountPath }}
        {{- end }}
        {{- end }}
      terminationGracePeriodSeconds: 300
      {{- if or .Values.mountapplicationsecrets .Values.mountconfigmap .Values.mountserviceaccountsecret .Values.mountadditionalvolumes }}
      volumes:
      {{- if .Values.mountapplicationsecrets }}
      - name: app-secrets
        secret:
          secretName: {{ .Values.name }}-secrets
      {{- end }}
      {{- if .Values.mountconfigmap }}
      - name: app-configs
        configMap:
          name: {{ .Values.name }}-configs
      {{- end }}
      {{- if .Values.mountserviceaccountsecret }}
      - name: gcp-service-account
        secret:
          secretName: {{ .Values.googlecloudcredentialsappname }}-gcp-service-account
      {{- end }}
      {{- range .Values.additionalvolumemounts }}
      - name: {{ .Values.name }}
{{ .VolumeYAML | indent 8 }}
      {{- end }}
      {{- end }}
{{- end -}}